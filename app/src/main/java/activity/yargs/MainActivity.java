package activity.yargs;

import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.util.Log;
import android.util.Pair;
import android.view.MenuItem;
import android.view.View;
import android.widget.LinearLayout;

import com.amap.api.maps.CameraUpdateFactory;
import com.amap.api.maps.model.BitmapDescriptorFactory;
import com.amap.api.maps.model.CameraPosition;
import com.amap.api.maps.model.LatLng;
import com.amap.api.maps.model.LatLngBounds;
import com.amap.api.maps.model.Polyline;
import com.amap.api.maps.model.PolylineOptions;
import com.amap.api.maps.utils.SpatialRelationUtil;
import com.amap.api.maps.utils.overlay.SmoothMoveMarker;
import com.google.android.material.bottomnavigation.BottomNavigationView;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import androidx.annotation.NonNull;
import androidx.appcompat.app.ActionBar;
import androidx.appcompat.app.AppCompatActivity;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;
import store.AllAmap;

public class MainActivity extends AppCompatActivity {
    private DrawerLayout mDrawerLayout;//滑动的DrawerLayout
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        AllAmap.ss="真的是";

        //系统标题栏隐藏  因为后边要加侧滑菜单
        ActionBar actionbar=getSupportActionBar();
        if(actionbar!=null) actionbar.hide();
        mDrawerLayout=(DrawerLayout) findViewById(R.id.DraLay);

        //默认显示home.xml
        replaceFragment(new home());

        //这两个是nav的
        BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.nav);
        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
    }



    private  void replaceFragment(Fragment fragment)
    {
        FragmentManager mframentmanage2=getSupportFragmentManager();
        FragmentTransaction transaction=mframentmanage2.beginTransaction();
        transaction.replace(R.id.router,fragment);
        transaction.commit();
    }

    /*
    *这个方法用来处理点击目录执行的跳转
     */
    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
            = new BottomNavigationView.OnNavigationItemSelectedListener() {

        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
            switch (item.getItemId()) {
                case R.id.nav_home:
                    mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNLOCKED); //开滑动的DrawerLayout
                    replaceFragment(new home());
                    return true;
                case R.id.nav_map:
                    mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED); //关滑动的DrawerLayout
                    replaceFragment(new map());
                    return true;
                case R.id.nav_info:
                    mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED); //关滑动的DrawerLayout
                    replaceFragment(new info());
                    return true;
                case R.id.nav_user:
                    mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED); //关滑动的DrawerLayout
                    replaceFragment(new user());
                    return true;
            }
            return false;
        }
    };

    public  void OpenDrewerLayout(View view){
        //不一定是LinearLayout类型，xml定义的什么类型就什么类型
        LinearLayout rlRight=(LinearLayout) findViewById(R.id.rights);
        if (!mDrawerLayout.isDrawerOpen(rlRight)) {
            mDrawerLayout.openDrawer(rlRight);
        }
    }
    /***
     * map
     * 打开离线地图
     */
    public void offLineMap(View view) {
        startActivity(new Intent(this.getApplicationContext(),com.amap.api.maps.offlinemap.OfflineMapActivity.class));
    }
    /***
     * map
     * 定位
     * @param view
     */
    public void mapLocation(View view){
        AllAmap.myMap.moveCamera(CameraUpdateFactory.changeLatLng(new LatLng(AllAmap.myMap.getMyLocation().getLatitude(), AllAmap.myMap.getMyLocation().getLongitude())));
    }

    /***
     * map
     * 绘制轨迹
     * @param view
     */
    public void DrawLine(View view) {

        AllAmap.myMap.clear();
        List<LatLng> latLngs = new ArrayList<LatLng>();
        latLngs.add(new LatLng(39.999391, 116.135972));
        latLngs.add(new LatLng(39.898323, 116.057694));
        latLngs.add(new LatLng(39.900430, 116.265061));
        latLngs.add(new LatLng(39.955192, 116.140092));

        String Allpoints="105.007034,27.904572;105.007233,27.904631;105.007324,27.90465;105.007469,27.904671;105.007599,27.904713;105.007706,27.904764;105.008064,27.904831;105.008354,27.904926;105.008774,27.904961;105.00914,27.905027;105.00914,27.905027;105.009384,27.905073;105.009621,27.905165;105.009735,27.905222;105.009735,27.905222;105.01001,27.905273;105.01123,27.905495;105.011345,27.905481;105.01162,27.905287;105.01162,27.905287;105.011894,27.905287;105.012047,27.90531;105.01226,27.905355;105.013123,27.905586;105.013351,27.905678;105.013466,27.905777;105.013527,27.905811;105.014015,27.905697;105.014198,27.905638;105.014503,27.905487;105.014641,27.905441;105.014801,27.905481;105.015083,27.905596;105.015205,27.905655;105.015297,27.90572;105.015358,27.905743;105.015411,27.905743;105.015488,27.905706;105.015503,27.905664;105.015495,27.905628;105.015465,27.905596;105.015312,27.905504;105.015045,27.905273;105.015015,27.905251;105.014977,27.905178;105.014969,27.905104;105.014992,27.905041;105.015137,27.904827;105.015182,27.904781;105.015205,27.904778;105.015251,27.9048;105.015259,27.904835;105.015228,27.904991;105.015221,27.905056;105.015274,27.905142;105.015343,27.905191;105.015526,27.905273;105.015648,27.905325;105.015923,27.905418;105.015991,27.90546;105.016037,27.905506;105.016037,27.905506;105.016045,27.905546;105.016029,27.905655;105.015816,27.90589;105.01561,27.906212;105.015488,27.906324;105.015442,27.906416;105.01545,27.906485;105.015488,27.906553;105.015602,27.906672;105.015663,27.906719;105.015884,27.906809;105.016464,27.906889;105.016983,27.906902;105.01712,27.906921;105.017517,27.907253;105.017693,27.907322;105.017784,27.907326;105.017998,27.907278;105.018188,27.907257;105.018234,27.907244;105.018349,27.907167;105.018448,27.907183;105.018501,27.907244;105.018578,27.907486;105.018684,27.90764;105.018784,27.907713;105.019073,27.907804;105.019218,27.907877;105.019272,27.907965;105.019272,27.908005;105.019257,27.908087;105.01918,27.90826;105.019135,27.908319;105.019058,27.908382;105.018898,27.908493;105.018791,27.908533;105.018593,27.908564;105.018341,27.908564;105.018311,27.908585;105.018303,27.908621;105.018349,27.908667;105.018631,27.908676;105.019028,27.908758;105.019501,27.908894;105.019577,27.908897;105.019615,27.90889;105.019646,27.908857;105.019661,27.908833;105.019638,27.908493;105.019653,27.90836;105.019691,27.908247;105.019745,27.908146;105.019806,27.908102;105.020012,27.908024;105.020073,27.907948;105.020073,27.907911;105.020035,27.907846;105.01992,27.907669;105.019913,27.907631;105.019943,27.907595;105.020012,27.9076;105.020088,27.907686;105.020226,27.9079;105.020233,27.90803;105.02018,27.908125;105.020134,27.908165;105.019943,27.908247;105.01992,27.908285;105.019905,27.908333;105.019928,27.908428;105.020073,27.908621;105.020256,27.908815;105.020508,27.90904;105.020607,27.909061;105.020874,27.909061;105.020905,27.909084;105.020935,27.909126;105.020935,27.909166;105.020897,27.909395;105.020897,27.909485;105.020927,27.909586;105.020981,27.909672;105.021469,27.910105;105.02153,27.910187;105.021637,27.910355;105.022079,27.911402;105.022133,27.911493;105.022301,27.911694;105.022469,27.911831;105.022568,27.911861;105.022797,27.911894;105.022987,27.911985;105.02327,27.912085;105.023422,27.912178;105.023705,27.912436;105.023895,27.912668;105.023994,27.912769;105.024193,27.912882;105.024315,27.912924;105.02494,27.913078;105.025261,27.913191;105.025467,27.913288;105.025467,27.913288;105.026123,27.91383;105.026497,27.91404;105.026581,27.91411;105.026611,27.914188;105.026649,27.914362;105.026672,27.914379;105.026711,27.914371;105.026741,27.914335;105.026756,27.914284;105.026756,27.914188;105.026695,27.914007;105.026665,27.913811;105.026695,27.913679;105.026764,27.913589;105.027176,27.913288;105.027176,27.913288;105.027245,27.913265;105.027306,27.91326;105.02739,27.913265;105.027451,27.913294;105.027451,27.913294;105.027695,27.913393;105.027771,27.913393;105.027832,27.913361;105.027885,27.913294;105.027885,27.913294;105.027908,27.913212;105.027901,27.913155;105.027878,27.912943;105.027847,27.912874;105.027786,27.912804;105.027611,27.912664;105.02758,27.912622;105.027573,27.912565;105.027588,27.91246;105.027626,27.912355;105.027664,27.91235;105.027695,27.912359;105.027718,27.912392;105.027679,27.912586;105.027695,27.912626;105.027786,27.912687;105.028046,27.912813;105.028259,27.912895;105.028336,27.912947;105.028412,27.913004;105.028595,27.9132;105.028732,27.913294;105.028732,27.913294;105.029022,27.913471;105.029297,27.91362;105.029305,27.91363;105.029816,27.913837;105.029915,27.913925;105.030052,27.914131;105.030266,27.914331;105.03054,27.91449;105.030602,27.914505;105.030693,27.914494;105.030762,27.914444;105.030922,27.914202;105.030983,27.914145;105.031082,27.914106;105.031265,27.914062;105.031448,27.914049;105.032379,27.91412;105.032379,27.91412;105.032639,27.914154;105.032867,27.914145;105.033165,27.914167;105.033165,27.914167;105.033508,27.914331;105.0336,27.914417;105.033669,27.914558;105.033714,27.914608;105.034126,27.914862;105.034195,27.914869;105.034515,27.914808;105.034622,27.914822;105.034966,27.914927;105.035667,27.91494;105.035843,27.914968;105.036011,27.915083;105.036011,27.915083;105.036057,27.91511;105.036118,27.915186;105.036194,27.915392;105.036385,27.915611;105.036598,27.915756;105.03685,27.915876;105.036995,27.915916;105.037132,27.915924;105.037407,27.915993;105.037552,27.916006;105.037636,27.915989;105.037758,27.915897;105.037811,27.915876;105.037872,27.915897;105.037941,27.915951;105.037979,27.916042;105.038017,27.916258;105.038017,27.916281;105.038101,27.916553;105.038261,27.916975;105.038826,27.917723;105.039146,27.918074;105.0392,27.918182;105.0392,27.918182;105.039322,27.918303;105.039368,27.91831;105.039421,27.918303;105.039505,27.918242;105.039627,27.918142;105.039635,27.918091;105.039627,27.91806;105.039612,27.918051;105.039452,27.918106;105.039368,27.918102;105.039307,27.918077;105.039253,27.918009;105.039177,27.917778;105.038918,27.917313;105.038628,27.916716;105.038628,27.916597;105.038712,27.916439;105.038773,27.916258;105.038826,27.916203;105.03923,27.915897;105.039284,27.915806;105.039314,27.915586;105.039284,27.915304;105.039177,27.915104;105.039154,27.914974;105.039154,27.914854;105.039215,27.914644;105.039207,27.914604;105.039139,27.914558;105.03904,27.914513;105.038788,27.914494;105.038704,27.914467;105.038651,27.914413;105.03862,27.914335;105.038612,27.914257;105.038643,27.914188;105.038696,27.914145;105.038757,27.914127;105.038811,27.914127;105.038895,27.914171;105.038994,27.914267;105.039726,27.914764;105.040237,27.915281;105.040344,27.915356;105.040657,27.915501;105.040901,27.91576;105.041069,27.915894;105.041466,27.916101;105.041855,27.916258;105.041893,27.916267;105.042595,27.916498;105.04277,27.916576;105.042969,27.916611;105.043404,27.916597;105.043602,27.91658;105.043839,27.916489;105.043968,27.916407;105.043991,27.916363;105.043991,27.916328;105.043953,27.916258;105.043884,27.91608;105.043892,27.916006;105.04393,27.91592;105.044174,27.915674;105.044357,27.9154;105.044464,27.915264;105.044586,27.915213;105.044685,27.915199;105.044762,27.915213;105.044792,27.915236;105.044884,27.915392;105.044899,27.915447;105.044907,27.915689;105.044975,27.915884;105.045113,27.916199;105.045105,27.916258;105.045082,27.916311;105.044952,27.916489;105.044945,27.916553;105.044968,27.916603;105.045013,27.916622;105.045158,27.916618;105.045776,27.916445;105.046021,27.916357;105.04615,27.916338;105.046288,27.916357;105.047386,27.916859;105.0476,27.917053;105.047653,27.917135;105.047653,27.91724;105.047607,27.917356;105.047523,27.91744;105.047318,27.917522;105.047264,27.917578;105.047264,27.917646;105.047379,27.917856;105.047455,27.917959;105.047592,27.918064;105.047981,27.918264;105.048195,27.918293;105.04834,27.918247;105.048561,27.918112;105.048889,27.917747;105.048927,27.917631;105.04895,27.91737;105.049004,27.917282;105.049065,27.91724;105.049286,27.917177;105.049469,27.917171;105.04966,27.917191;105.049797,27.917236;105.049797,27.917236;105.049973,27.917286;105.050163,27.917377;105.050217,27.917454;105.05024,27.91765;105.050224,27.917738;105.050163,27.917828;105.04995,27.917915;105.049881,27.917978;105.049843,27.918102;105.049812,27.918285;105.049812,27.918711;105.049789,27.918825;105.04969,27.919098;105.04969,27.919203;105.049713,27.919285;105.049805,27.91938;105.050018,27.919544;105.050888,27.919817;105.05127,27.920126;105.051437,27.920259;105.051476,27.920313;105.051483,27.920401;105.051453,27.92046;105.05143,27.920469;105.05143,27.920469;105.051399,27.920486;105.05127,27.920486;105.051193,27.920477;105.051064,27.920496;105.050949,27.920521;105.050842,27.920588;105.050781,27.92065;105.050743,27.920725;105.050743,27.920792;105.050781,27.92086;105.050835,27.920929;105.051086,27.92115;105.051147,27.921244;105.051147,27.921343;105.051132,27.921429;105.050972,27.921701;105.050972,27.921766;105.050995,27.921818;105.051041,27.921862;105.05127,27.921984;105.051277,27.921988;105.05143,27.922089;105.051537,27.92215;105.052002,27.922304;105.05217,27.922382;105.052315,27.922487;105.052589,27.922737;105.052757,27.922846;105.052856,27.922895;105.053154,27.922943;105.053261,27.922991;105.053635,27.92325;105.053726,27.923273;105.054024,27.923288;105.0541,27.923315;105.054214,27.923388;105.054314,27.923525;105.054382,27.923576;105.054474,27.923597;105.054604,27.92358;105.054855,27.92342;105.054939,27.923315;105.055023,27.923174;105.055084,27.923014;105.055374,27.922651;105.055626,27.922474;105.056068,27.922287;105.056152,27.922218;105.056168,27.922167;105.056198,27.921902;105.05629,27.921698;105.05648,27.921524;105.056961,27.921244;105.057068,27.921198;105.057281,27.921181;105.057442,27.92115;105.057571,27.921099;105.057724,27.920952;105.057762,27.920851;105.057762,27.920742;105.057724,27.92063;105.057655,27.920542;105.057594,27.920521;105.057335,27.920521;105.057259,27.9205;105.05719,27.920404;105.057167,27.920204;105.057114,27.920113;105.057014,27.920036;105.056877,27.92;105.056519,27.92001;105.05645,27.919996;105.056419,27.919964;105.056389,27.919901;105.056381,27.919777;105.056412,27.919632;105.056473,27.919558;105.056572,27.919493;105.056732,27.919422;105.057037,27.919371;105.057076,27.919327;105.057083,27.919241;105.056976,27.919085;105.056953,27.918985;105.056946,27.918848;105.056969,27.918751;105.057121,27.918507;105.057167,27.918383;105.057228,27.918074;105.057472,27.917814;105.057564,27.917761;105.057617,27.917761;105.057671,27.917782;105.057678,27.917814;105.057671,27.91786;105.057648,27.917915;105.057472,27.918077;105.057404,27.918169;105.057381,27.918282;105.057297,27.918734;105.057289,27.918871;105.057312,27.918945;105.05735,27.918993;105.057556,27.919167;105.05761,27.919266;105.057678,27.919758;105.057732,27.91983;105.057838,27.919882;105.057915,27.919895;105.057999,27.919878;105.058044,27.91984;105.05806,27.919786;105.058052,27.919704;105.057877,27.919317;105.057785,27.919067;105.057762,27.918945;105.05777,27.91884;105.057808,27.918751;105.058067,27.918285;105.058411,27.917896;105.058456,27.917791;105.058487,27.917614;105.058571,27.917313;105.058571,27.917313;105.058487,27.917177;105.058434,27.917057;105.058205,27.916271;105.058205,27.916258;105.058144,27.915998;105.058136,27.915859;105.058304,27.913958;105.058372,27.913334;105.058372,27.913334;105.05838,27.91291;105.058525,27.911457;105.058586,27.911234;105.058586,27.911234;105.058655,27.911011;105.058815,27.910807;105.058815,27.910807;105.059128,27.910391;105.059273,27.909863;105.059273,27.909863;105.059334,27.909672;105.059395,27.909531;105.059547,27.909245;105.059952,27.908766;105.06002,27.908648;105.060036,27.908503;105.059982,27.908178;105.059929,27.908016;105.059944,27.907877;105.060005,27.907692;105.060181,27.907627;105.060371,27.907604;105.060852,27.907669;105.06115,27.907604;105.061378,27.907413;105.061661,27.907063;105.061707,27.906904;105.061668,27.906675;105.061584,27.906481;105.061539,27.906275;105.061584,27.906107;105.061745,27.905964;105.062042,27.905516;105.062065,27.905468;105.062065,27.905468;105.062103,27.905329;105.062126,27.905273;105.062187,27.905018;105.062263,27.904222;105.062187,27.90329;105.062256,27.903004;105.062393,27.902874;105.062492,27.902733;105.062531,27.902578;105.06263,27.90233;105.062683,27.902027;105.062675,27.901871;105.062553,27.901752;105.062157,27.901289;105.06208,27.901033;105.062096,27.900806;105.062149,27.90066;105.062279,27.900446;105.062424,27.900324;105.062607,27.90023;105.062675,27.900333;105.06263,27.900446;105.062477,27.900604;105.062401,27.900764;105.062439,27.900934;105.062561,27.901016;105.062683,27.901033;105.06282,27.901093;105.062943,27.901176;105.06311,27.901342;105.063202,27.901398;105.063316,27.90144;105.063431,27.901436;105.06382,27.901299;105.064194,27.901234;105.064484,27.90119;105.064728,27.901194;105.064865,27.901266;105.064949,27.901367;105.065025,27.901608;105.065117,27.901789;105.065193,27.901857;105.065262,27.901894;105.06543,27.901913;105.065605,27.901903;105.065704,27.901926;105.065811,27.901987;105.066338,27.902464;105.066544,27.902552;105.066864,27.902546;105.067032,27.902514;105.067177,27.90247;105.067207,27.902439;105.067291,27.902327;105.067291,27.902283;105.067291,27.902283;105.067261,27.902208;105.067207,27.902153;105.067154,27.902145;105.066864,27.902174;105.066719,27.90217;105.066544,27.902119;105.066437,27.902027;105.066292,27.901871;105.066185,27.901716;105.066017,27.901594;105.065544,27.901346;105.065384,27.901241;105.065117,27.900965;105.064919,27.900856;105.064682,27.900782;105.064384,27.900764;105.064163,27.900721;105.063721,27.900734;105.063629,27.900715;105.063583,27.900665;105.063576,27.90062;105.063652,27.900242;105.063744,27.899944;105.063744,27.899754;105.063637,27.89953;105.063416,27.899323;105.063171,27.899254;105.062981,27.899275;105.062477,27.899494;105.062317,27.8995;105.062103,27.899435;105.061813,27.899149;105.061852,27.898985;105.062225,27.898584;105.062401,27.898365;105.062599,27.898237;105.06279,27.898046;105.062836,27.897873;105.062843,27.897535;105.062744,27.897236;105.062454,27.896597;105.062401,27.896198;105.062416,27.895933;105.06263,27.895355;105.062721,27.895031;105.062775,27.894663;105.062729,27.89444;105.062729,27.89444;105.062714,27.894285;105.062744,27.894007;105.062859,27.893433;105.062897,27.893147;105.063095,27.892759;105.063339,27.892464;105.063522,27.892368;105.063522,27.892368;105.064148,27.892044;105.064384,27.89201;105.064507,27.892031;105.064613,27.892122;105.064636,27.892305;105.064568,27.892645;105.06459,27.892874;105.064659,27.893024;105.064796,27.893042;105.064957,27.892942;105.065201,27.892738;105.065536,27.892387;105.065804,27.892187;105.066162,27.892118;105.066429,27.892099;105.066971,27.892136;105.067299,27.892099;105.06749,27.891991;105.067528,27.891863;105.067535,27.891644;105.067589,27.891516;105.06768,27.891432;105.068207,27.891233;105.068596,27.891184;105.068703,27.891098;105.068756,27.890997;105.068687,27.890888;105.068642,27.890869;105.068642,27.890869;105.068542,27.890825;105.067749,27.890646;105.067162,27.890429;105.066612,27.890146;105.066154,27.889944;105.065926,27.889782;105.065796,27.889549;105.065727,27.889301;105.065598,27.888794;105.06543,27.888594;105.065247,27.88846;105.06498,27.888308;105.064636,27.888046;105.064301,27.887831;105.063774,27.887295;105.063744,27.887035;105.063774,27.886818;105.063866,27.886589;105.063957,27.886293;105.063904,27.886097;105.063599,27.885214;105.063522,27.884882;105.06337,27.884701;105.062744,27.884336;105.06234,27.884048;105.062065,27.883802;105.061699,27.883297;105.061607,27.883179;105.061478,27.882883;105.061478,27.882418;105.061493,27.882095;105.061501,27.881775;105.061478,27.881458;105.061363,27.881088;105.060753,27.880077;105.060699,27.879862;105.060722,27.879686;105.060867,27.879297;105.06105,27.878893;105.061424,27.878571;105.061539,27.878443;105.061592,27.878328;105.061485,27.878239;105.060852,27.877909;105.060219,27.877705;105.060043,27.877722;105.059998,27.877832;105.060097,27.877924;105.060425,27.878073;105.060623,27.878187;105.060745,27.878288;105.060768,27.878429;105.060684,27.878597;105.060539,27.87862;105.060196,27.878393;105.059998,27.878315;105.059776,27.878256;105.059639,27.878246;105.059502,27.878256;105.059105,27.878368;105.058952,27.878437;105.058907,27.878542;105.058914,27.878716;105.059067,27.879276;105.059135,27.879499;105.05925,27.879658;105.059387,27.879765;105.059563,27.879814;105.059746,27.879835;105.059868,27.879873;105.059944,27.879959;105.059906,27.880074;105.059776,27.880117;105.059433,27.879986;105.05912,27.879814;105.058975,27.87969;105.058838,27.879431;105.058563,27.878839;105.058487,27.878643;105.058426,27.878429;105.05838,27.878191;105.05838,27.878098;105.058456,27.877937;105.058525,27.877729;105.058525,27.877577;105.058296,27.877186;105.058273,27.877089;105.058273,27.877018;105.058365,27.876909;105.058571,27.876732;105.058975,27.876324;105.059319,27.875803;105.05954,27.87561;105.059937,27.875299;105.060112,27.875204;105.060272,27.875183;105.060822,27.875059;105.06102,27.875095;105.061226,27.875191;105.061279,27.87532;105.061241,27.875595;105.061256,27.875746;105.061279,27.87586;105.061417,27.876028;105.061691,27.876316;105.061821,27.876381;105.061966,27.876337;105.062477,27.875994;105.062569,27.875889;105.062569,27.875759;105.062355,27.875439;105.061928,27.875134;105.061363,27.874769;105.061203,27.874701;105.061012,27.874653;105.060692,27.874609;105.060562,27.874554;105.060379,27.87439;105.060265,27.874184;105.060089,27.873959;105.059944,27.873907;105.059814,27.873911;105.059639,27.873953;105.059456,27.874022;105.059174,27.874222;105.058952,27.874294;105.05883,27.874275;105.058136,27.873825;105.057915,27.873543;105.057419,27.872726;105.057289,27.872677;105.057137,27.872765;105.056892,27.872955;105.056747,27.872982;105.056641,27.872929;105.056602,27.872843;105.056633,27.872742;105.05687,27.872492;105.056984,27.872322;105.056999,27.872313;105.057068,27.872162;105.056976,27.87188;105.056953,27.871685;105.056679,27.870911;105.056473,27.870611;105.056313,27.87031;105.056122,27.869974;105.056107,27.869764;105.056152,27.869658;105.056206,27.869635;105.05629,27.86964;105.056381,27.869705;105.056496,27.870132;105.056641,27.870481;105.056801,27.870697;105.0569,27.870743;105.057007,27.870674;105.057022,27.870586;105.056931,27.870152;105.056976,27.869955;105.057571,27.869001;105.057617,27.868925;105.057632,27.86879;105.057472,27.86846;105.057083,27.867878;105.05687,27.867535;105.056633,27.867075;105.056587,27.866945;105.056557,27.866749;105.056633,27.866302;105.05661,27.866159;105.056549,27.866024;105.056313,27.865364;105.056168,27.865065;105.056,27.864582;105.055939,27.864248;105.055954,27.864027;105.055946,27.863863;105.055984,27.863365;105.056061,27.86307;105.056107,27.862526;105.056046,27.862391;105.05558,27.862062;105.05555,27.861944;105.055557,27.861902;105.055557,27.861902;105.055565,27.861879;105.055679,27.861797;105.056694,27.861763;105.056847,27.861727;105.056923,27.861631;105.056969,27.861328;105.056969,27.861307;105.056969,27.860989;105.057007,27.860842;105.057365,27.860456;105.057457,27.8603;105.057678,27.859814;105.057785,27.859489;105.057793,27.859322;105.057785,27.859011;105.057816,27.858852;105.058044,27.858433;105.058044,27.858307;105.057953,27.857946;105.057983,27.857861;105.05806,27.857759;105.058205,27.85766;105.058426,27.857578;105.058678,27.85754;105.058861,27.857449;105.058937,27.857355;105.058922,27.857218;105.058899,27.857018;105.058853,27.856827;105.058861,27.856771;105.058899,27.85672;105.058952,27.85668;105.059036,27.856676;105.059395,27.856827;105.059639,27.85689;105.059906,27.856897;105.060097,27.856804;105.060204,27.856663;105.06041,27.855911;105.060432,27.855751;105.060371,27.855013;105.06031,27.854765;105.060242,27.854631;105.060112,27.854517;105.059769,27.854385;105.059319,27.854261;105.059158,27.854248;105.058922,27.854288;105.058632,27.854362;105.058517,27.854349;105.058434,27.854298;105.058327,27.85404;105.058258,27.853933;105.058136,27.853853;105.057915,27.853767;105.057472,27.853666;105.057259,27.853647;105.057144,27.853699;105.056969,27.854019;105.056862,27.854198;105.056694,27.854336;105.056381,27.854544;105.056084,27.854792;105.055786,27.855055;105.055527,27.85519;105.055374,27.855204;105.055298,27.85515;105.055267,27.855061;105.055374,27.854818;105.05584,27.854179;105.056,27.853849;105.056,27.853849;105.056107,27.853485;105.056198,27.853292;105.056313,27.852924;105.05632,27.852795;105.05632,27.852795;105.056313,27.852678;105.056046,27.85236;105.055695,27.852053;105.054199,27.850582;105.054199,27.850582;105.05426,27.850506;105.05426,27.850506;105.054314,27.850405;105.054321,27.850338;105.054329,27.850304;105.054329,27.850304;105.054321,27.850218;105.054253,27.850044;105.05397,27.84968;105.053841,27.84948;105.053741,27.849226;105.053719,27.849089;105.053741,27.848907;105.053848,27.848783;105.053963,27.848711;105.054131,27.84868;105.054329,27.848711;105.054436,27.848759;105.054756,27.84902;105.054802,27.849112;105.054817,27.849236;105.054863,27.849327;105.054924,27.849405;105.054993,27.849449;105.055077,27.849476;105.055412,27.849535;105.055786,27.849583;105.05616,27.849676;105.05629,27.849691;105.056519,27.849691;105.056816,27.849627;105.057343,27.849327;105.057343,27.849327;105.057571,27.849236;105.057838,27.849157;105.05822,27.849016;105.058411,27.848898;105.058632,27.848625;105.058723,27.848537;105.058815,27.848494;105.058907,27.848494;105.058975,27.848511;105.059021,27.848534;105.05909,27.848598;105.059128,27.848671;105.059128,27.848751;105.059082,27.848833;105.058777,27.84918;105.058693,27.849312;105.058678,27.849409;105.058685,27.849531;105.058708,27.849586;105.058784,27.849695;105.058907,27.849804;105.059021,27.849873;105.059303,27.850031;105.05941,27.850069;105.059708,27.850142;105.060234,27.850227;105.060608,27.850338;105.060898,27.850433;105.060898,27.850433;105.061134,27.850515;105.061386,27.850611;105.061653,27.850674;105.061859,27.850668;105.062279,27.850609;105.062569,27.850599;105.062675,27.85063;105.062805,27.850689;105.063019,27.850834;105.063194,27.850885;105.063194,27.850885;105.063408,27.850885;105.064163,27.850752;105.064278,27.850746;105.06469,27.850821;105.065254,27.850977;105.065254,27.850977;105.065193,27.850834;105.065193,27.850834;105.064987,27.850338;105.064598,27.84938;105.064537,27.849266;105.064445,27.849157;105.064255,27.849003;105.06411,27.848925;105.062981,27.848425;105.062981,27.848425;105.062622,27.848221;105.062531,27.84815;105.062416,27.848034;105.061935,27.847445;105.061935,27.847445;105.060936,27.84621;105.060646,27.845875;105.060478,27.845711;105.060371,27.845625;105.060135,27.845478;105.058136,27.844353;105.058136,27.844353;105.057724,27.84411;105.057724,27.84411;105.056763,27.843597;105.056587,27.843451;105.056587,27.843451;105.056419,27.843294;105.056305,27.843142;105.055664,27.842127;105.055664,27.842127;105.055153,27.84128;105.055031,27.841124;105.054916,27.840994;105.054779,27.840885;105.054207,27.840483;105.054207,27.840483;105.053452,27.839951;105.053452,27.839951;105.053154,27.839722;105.053154,27.839722;105.052773,27.839449;105.052773,27.839449;105.052673,27.839354;105.052589,27.839262;105.052162,27.838654;105.051849,27.838247;105.05127,27.837669;105.051117,27.837519;105.050766,27.837191;105.050766,27.837191;105.050598,27.837017;105.050598,27.837017;105.050285,27.83672;105.050285,27.83672;105.050056,27.836506;105.049934,27.836445;105.049934,27.836445;105.049538,27.836353;105.049538,27.836353;105.049271,27.836311;105.049271,27.836311;105.049271,27.836452";

//        String [] pointss = Allpoints.split(";");
//
//        Log.d("这里了", " "+Allpoints.length());
//        Log.d("这里了2", " "+pointss.length);
//
//        for (int i=0;i<pointss.length;i++){
//            String pointsss = Arrays.toString(pointss);
//            String [] pointsss1 = pointsss.split(",");
//            latLngs.add(new LatLng(Double.parseDouble(pointsss1[0]),Double.parseDouble(pointsss1[1])));
//        }





        Polyline polyline = AllAmap.myMap.addPolyline(new PolylineOptions().
                setUseTexture(false) //是否使用纹理贴图
                .addAll(latLngs)
                .width(20)
                .color(Color.argb(255, 255, 1, 1)));


        List<LatLng> points = latLngs;
        LatLngBounds bounds = new LatLngBounds(points.get(0), points.get(points.size() - 2));
        AllAmap.myMap.animateCamera(CameraUpdateFactory.newLatLngBounds(bounds, 50));

        SmoothMoveMarker smoothMarker = new SmoothMoveMarker(AllAmap.myMap);
// 设置滑动的图标
        smoothMarker.setDescriptor(BitmapDescriptorFactory.fromResource(R.drawable.car));

        LatLng drivePoint = points.get(0);
        Pair<Integer, LatLng> pair = SpatialRelationUtil.calShortestDistancePoint(points, drivePoint);
        points.set(pair.first, drivePoint);
        List<LatLng> subList = points.subList(pair.first, points.size());

// 设置滑动的轨迹左边点
        smoothMarker.setPoints(subList);
// 设置滑动的总时间
        smoothMarker.setTotalDuration(40);
// 开始滑动
        smoothMarker.startSmoothMove();





AllAmap.myMap.moveCamera(CameraUpdateFactory.zoomTo(10)); //设置显示比例
LatLng latLng = new LatLng(39.898323,116.057694);
AllAmap.myMap. moveCamera(CameraUpdateFactory.changeLatLng(latLng));


        AllAmap.myMap.moveCamera(CameraUpdateFactory.newCameraPosition(new CameraPosition(
                new LatLng(39.898323,116.057694), 18, 30, 30)));


    }



}
